{"version":3,"sources":["components/SideMenu.js","components/Header.js","components/PageHeader.js","components/controls/Button.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","components/useForm.js","services/employeeService.js","pages/Employees/EmployeeForm.js","components/useTable.js","pages/Employees/Employees.js","App/App.js","serviceWorker.js","index.js"],"names":["withStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","props","classes","className","useStyles","makeStyles","theme","root","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","Badge","badgeContent","color","pageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","PageHeader","title","subTitle","icon","Paper","elevation","square","Card","Typography","variant","component","margin","label","textTransform","Controls","Input","name","value","error","onChange","other","TextField","helperText","RadioGroup","items","FormControl","FormLabel","row","map","FormControlLabel","key","id","control","Radio","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","text","size","onClick","KEYS","getAllEmployees","localStorage","getItem","setItem","JSON","stringify","employees","parse","departments","x","department","departmentId","Date","table","marginTop","fontWeight","palette","primary","main","light","cursor","useTable","records","headCells","filterFn","pages","useState","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","descendingComparator","a","b","TblContainer","Table","children","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","length","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","el","index","sort","stableSort","fn","getComparator","slice","pageContent","Employees","employeeService","setFilterFn","InputProps","InputAdornment","filter","fullName","toLowerCase","includes","TableBody","email","mobile","createMuiTheme","secondary","background","default","overrides","MuiAppBar","transform","MuiIconButton","disableRipple","appMain","App","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.439663de.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, withStyles } from \"@material-ui/core\";\n\n// withStyles & makeStyles\n\nconst style = {\n    sideMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        left: '0px',\n        width: '320px',\n        height: '100%',\n        backgroundColor: '#253053'\n    }\n}\n\nconst SideMenu = (props) => {\n    const { classes } = props;\n    return (\n        <div className={classes.sideMenu}>\n\n        </div>\n    )\n}\n\nexport default withStyles(style)(SideMenu);\n","import React from 'react'\nimport { AppBar, Toolbar, Grid, InputBase, IconButton, Badge, makeStyles } from '@material-ui/core'\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fff',\n        \n    },\n    searchInput: {\n        opacity: '0.6',\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: '0.8rem',\n        '&:hover': {\n            backgroundColor: '#f2f2f2'\n        },\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(1)\n        }\n    }\n}))\n\nexport default function Header() {\n\n    const classes = useStyles();\n\n    return (\n        <AppBar position=\"static\" className={classes.root}>\n            <Toolbar>\n                <Grid container\n                    alignItems=\"center\">\n                    <Grid item>\n                        <InputBase\n                            placeholder=\"Search topics\"\n                            className={classes.searchInput}\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\n                        />\n                    </Grid>\n                    <Grid item sm></Grid>\n                    <Grid item>\n                        <IconButton>\n                            <Badge badgeContent={4} color=\"secondary\">\n                                <NotificationsNoneIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <Badge badgeContent={3} color=\"primary\">\n                                <ChatBubbleOutlineIcon fontSize=\"small\" />\n                            </Badge>\n                        </IconButton>\n                        <IconButton>\n                            <PowerSettingsNewIcon fontSize=\"small\" />\n                        </IconButton>\n                    </Grid>\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    )\n}\n","import React from 'react'\nimport { Paper, Card, Typography, makeStyles, Button } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: '#fdfdff'\n    },\n    pageHeader:{\n        padding:theme.spacing(4),\n        display:'flex',\n        marginBottom:theme.spacing(2)\n    },\n    pageIcon:{\n        display:'inline-block',\n        padding:theme.spacing(2),\n        color:'#3c44b1'\n    },\n    pageTitle:{\n        paddingLeft:theme.spacing(4),\n        '& .MuiTypography-subtitle2':{\n            opacity:'0.6'\n        }\n    }\n}))\n\nexport default function PageHeader(props) {\n\n    const classes = useStyles();\n    const { title, subTitle, icon } = props;\n    return (\n        <Paper elevation={0} square className={classes.root}>\n            <div className={classes.pageHeader}>\n                <Card className={classes.pageIcon}>\n                    {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography\n                        variant=\"h6\"\n                        component=\"div\">\n                        {title}</Typography>\n                    <Typography\n                        variant=\"subtitle2\"\n                        component=\"div\">\n                        {subTitle}</Typography>\n                </div>\n            </div>\n        </Paper>\n    )\n}\n","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n    const classes = useStyles();\n\n    return (\n        <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || \"primary\"}\n            onClick={onClick}\n            {...other}\n            classes={{ root: classes.root, label: classes.label }}>\n            {text}\n        </MuiButton>\n    )\n}\n","import Input from \"./Input\";\nimport RadioGroup from \"./RadioGroup\";\nimport Select from \"./Select\";\nimport Checkbox from \"./Checkbox\";\nimport DatePicker from \"./DatePicker\";\nimport Button from \"./Button\";\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    DatePicker,\n    Button\n\n}\n\nexport default Controls;","import React from 'react'\nimport { TextField } from '@material-ui/core';\n\nexport default function Input(props) {\n\n    const { name, label, value,error=null, onChange, ...other } = props;\n    return (\n        <TextField\n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            onChange={onChange}\n            {...other}\n            {...(error && {error:true,helperText:error})}\n        />\n    )\n}\n","import React from 'react'\nimport { FormControl, FormLabel, RadioGroup as MuiRadioGroup, FormControlLabel, Radio } from '@material-ui/core';\n\nexport default function RadioGroup(props) {\n\n    const { name, label, value, onChange, items } = props;\n\n    return (\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row\n                name={name}\n                value={value}\n                onChange={onChange}>\n                {\n                    items.map(\n                        item => (\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, InputLabel, Select as MuiSelect, MenuItem, FormHelperText } from '@material-ui/core';\n\nexport default function Select(props) {\n\n    const { name, label, value,error=null, onChange, options } = props;\n\n    return (\n        <FormControl variant=\"outlined\"\n        {...(error && {error:true})}>\n            <InputLabel>{label}</InputLabel>\n            <MuiSelect\n                label={label}\n                name={name}\n                value={value}\n                onChange={onChange}>\n                <MenuItem value=\"\">None</MenuItem>\n                {\n                    options.map(\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                    )\n                }\n            </MuiSelect>\n            {error && <FormHelperText>{error}</FormHelperText>}\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\n\nexport default function Checkbox(props) {\n\n    const { name, label, value, onChange } = props;\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <FormControl>\n            <FormControlLabel\n                control={<MuiCheckbox\n                    name={name}\n                    color=\"primary\"\n                    checked={value}\n                    onChange={e => onChange(convertToDefEventPara(name, e.target.checked))}\n                />}\n                label={label}\n            />\n        </FormControl>\n    )\n}\n","import React from 'react'\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nexport default function DatePicker(props) {\n\n    const { name, label, value, onChange } = props\n\n\n    const convertToDefEventPara = (name, value) => ({\n        target: {\n            name, value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\"\n                label={label}\n                format=\"MMM/dd/yyyy\"\n                name={name}\n                value={value}\n                onChange={date =>onChange(convertToDefEventPara(name,date))}\n\n            />\n        </MuiPickersUtilsProvider>\n    )\n}\n","import React, { useState } from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n\n\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n        if (validateOnChange)\n            validate({ [name]: value })\n    }\n\n    const resetForm = () => {\n        setValues(initialFValues);\n        setErrors({})\n    }\n\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n\n    }\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '80%',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nexport function Form(props) {\n\n    const classes = useStyles();\n    const { children, ...other } = props;\n    return (\n        <form className={classes.root} autoComplete=\"off\" {...other}>\n            {props.children}\n        </form>\n    )\n}\n\n","const KEYS = {\n    employees: 'employees',\n    employeeId: 'employeeId'\n}\n\nexport const getDepartmentCollection = () => ([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    { id: '4', title: 'HR' },\n])\n\nexport function insertEmployee(data) {\n    let employees = getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function generateEmployeeId() {\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    //map departmentID to department title\n    let departments = getDepartmentCollection();\n    return employees.map(x => ({\n        ...x,\n        department: departments[x.departmentId - 1].title\n    }))\n}","import React, { useState, useEffect } from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\n\n\nconst genderItems = [\n    { id: 'male', title: 'Male' },\n    { id: 'female', title: 'Female' },\n    { id: 'other', title: 'Other' },\n]\n\nconst initialFValues = {\n    id: 0,\n    fullName: '',\n    email: '',\n    mobile: '',\n    city: '',\n    gender: 'male',\n    departmentId: '',\n    hireDate: new Date(),\n    isPermanent: false,\n}\n\nexport default function EmployeeForm() {\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\n        if ('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n\n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()){\n            employeeService.insertEmployee(values)\n            resetForm()\n        }\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                    <Controls.Input\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n                    <Controls.Input\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        error={errors.mobile}\n                    />\n                    <Controls.Input\n                        label=\"City\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                    />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\" />\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick={resetForm} />\n                    </div>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n","import React, { useState } from 'react'\nimport { Table, TableHead, TableRow, TableCell, makeStyles, TablePagination, TableSortLabel } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records, headCells,filterFn) {\n\n    const classes = useStyles();\n\n    const pages = [5, 10, 25]\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage] = useState(pages[page])\n    const [order, setOrder] = useState()\n    const [orderBy, setOrderBy] = useState()\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId => {\n            const isAsc = orderBy === cellId && order === \"asc\";\n            setOrder(isAsc ? 'desc' : 'asc');\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {\n                    headCells.map(headCell => (\n                        <TableCell key={headCell.id}\n                            sortDirection={orderBy === headCell.id ? order : false}>\n                            {headCell.disableSorting ? headCell.label :\n                                <TableSortLabel\n                                    active={orderBy === headCell.id}\n                                    direction={orderBy === headCell.id ? order : 'asc'}\n                                    onClick={() => { handleSortRequest(headCell.id) }}>\n                                    {headCell.label}\n                                </TableSortLabel>\n                            }\n                        </TableCell>))\n                }\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10))\n        setPage(0);\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\"\n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n    />)\n\n    function stableSort(array, comparator) {\n        const stabilizedThis = array.map((el, index) => [el, index]);\n        stabilizedThis.sort((a, b) => {\n            const order = comparator(a[0], b[0]);\n            if (order !== 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((el) => el[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'desc'\n            ? (a, b) => descendingComparator(a, b, orderBy)\n            : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]) {\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records), getComparator(order, orderBy))\n            .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}\n","import React, { useState } from \"react\";\nimport EmployeeForm from \"./EmployeeForm\";\nimport PageHeader from \"../../components/PageHeader\";\nimport PeopleOutlineTwoToneIcon from \"@material-ui/icons/PeopleOutlineTwoTone\";\nimport {\n  Paper,\n  makeStyles,\n  TableBody,\n  TableRow,\n  TableCell,\n  Toolbar,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport useTable from \"../../components/useTable\";\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from \"../../components/controls/Controls\";\nimport { Search } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3),\n  },\n  searchInput: {\n    width: \"75%\",\n  },\n}));\n\nconst headCells = [\n  { id: \"fullName\", label: \"id\" },\n  { id: \"email\", label: \"Name\" },\n  { id: \"mobile\", label: \"Age\" },\n\n  { id: \"department\", label: \"City\", disableSorting: true },\n];\n\nexport default function Employees() {\n  const classes = useStyles();\n  const [records, setRecords] = useState(employeeService.getAllEmployees());\n  const [filterFn, setFilterFn] = useState({\n    fn: (items) => {\n      return items;\n    },\n  });\n\n  const { TblContainer, TblHead, TblPagination, recordsAfterPagingAndSorting } =\n    useTable(records, headCells, filterFn);\n\n  const handleSearch = (e) => {\n    let target = e.target;\n    setFilterFn({\n      fn: (items) => {\n        if (target.value == \"\") return items;\n        else\n          return items.filter((x) =>\n            x.fullName.toLowerCase().includes(target.value)\n          );\n      },\n    });\n  };\n\n  return (\n    <>\n      <PageHeader\n        title=\"Tabel\"\n        subTitle=\"Form design with validation\"\n        icon={<PeopleOutlineTwoToneIcon fontSize=\"large\" />}\n      />\n      <Paper className={classes.pageContent}>\n        {/* <EmployeeForm /> */}\n        <Toolbar>\n          <Controls.Input\n            label=\"Search Tabel\"\n            className={classes.searchInput}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Search />\n                </InputAdornment>\n              ),\n            }}\n            onChange={handleSearch}\n          />\n        </Toolbar>\n        <TblContainer>\n          <TblHead />\n          <TableBody>\n            {recordsAfterPagingAndSorting().map((item) => (\n              <TableRow key={item.id}>\n                <TableCell>{item.fullName}</TableCell>\n                <TableCell>{item.email}</TableCell>\n                <TableCell>{item.mobile}</TableCell>\n                <TableCell>{item.department}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </TblContainer>\n        <TblPagination />\n      </Paper>\n    </>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport SideMenu from \"../components/SideMenu\";\nimport { makeStyles, CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Header from \"../components/Header\";\nimport PageHeader from '../components/PageHeader';\n\nimport Employees from \"../pages/Employees/Employees\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: '#3c44b126'\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: '#f8324526'\n    },\n    background: {\n      default: \"#f4f5fd\"\n    },\n  },\n  overrides:{\n    MuiAppBar:{\n      root:{\n        transform:'translateZ(0)'\n      }\n    }\n  },\n  props:{\n    MuiIconButton:{\n      disableRipple:true\n    }\n  }\n})\n\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft: '320px',\n    width: '100%'\n  }\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SideMenu />\n      <div className={classes.appMain}>\n        <Header />\n        \n        <Employees />\n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}